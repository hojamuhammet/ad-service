version: '3.8'

services:
  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ads
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"
      - "14250:14250"
      - "6831:6831/udp"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-config.yml:/otel-local-config.yml
    command: ["--config", "/otel-local-config.yml"]
    ports:
      - "4317:4317"
      - "4318:4318"
      - "8888:8888"

  goose-migrate:
    build:
      context: .
      dockerfile: Dockerfile.goose
    volumes:
      - ./migrations:/migrations
    entrypoint: ["goose", "-dir", "/migrations", "mysql", "root:root@tcp(mysql:3306)/ads", "up"]
    depends_on:
      mysql:
        condition: service_healthy

  microservice:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - CONFIG_FILE=/app/config.yaml
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      jaeger:
        condition: service_started
      otel-collector:
        condition: service_started
      goose-migrate:
        condition: service_completed_successfully

volumes:
  mysql-data:
